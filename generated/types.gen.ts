// This file is auto-generated by @hey-api/openapi-ts

export type BaseResponse_LoginUserVo_ = {
  code?: number;
  data?: LoginUserVo;
  message?: string;
};

export type BaseResponse_Page_PostVo__ = {
  code?: number;
  data?: Page_PostVo_;
  message?: string;
};

export type BaseResponse_Page_userVo__ = {
  code?: number;
  data?: Page_userVo_;
  message?: string;
};

export type BaseResponse_Page_user__ = {
  code?: number;
  data?: Page_user_;
  message?: string;
};

export type BaseResponse_PostVo_ = {
  code?: number;
  data?: PostVo;
  message?: string;
};

export type BaseResponse_userVo_ = {
  code?: number;
  data?: UserVo;
  message?: string;
};

export type BaseResponse_user_ = {
  code?: number;
  data?: User;
  message?: string;
};

export type BaseResponse_boolean_ = {
  code?: number;
  data?: boolean;
  message?: string;
};

export type BaseResponse_int_ = {
  code?: number;
  data?: number;
  message?: string;
};

export type BaseResponse_long_ = {
  code?: number;
  data?: number;
  message?: string;
};

export type BaseResponse_string_ = {
  code?: number;
  data?: string;
  message?: string;
};

export type DeleteRequest = {
  id?: number;
};

export type LoginUserVo = {
  createTime?: string;
  id?: number;
  updateTime?: string;
  userAvatar?: string;
  userName?: string;
  userProfile?: string;
  userRole?: string;
};

export type OrderItem = {
  asc?: boolean;
  column?: string;
};

export type Page_PostVo_ = {
  countId?: string;
  current?: number;
  maxLimit?: number;
  optimizeCountSql?: boolean;
  orders?: Array<OrderItem>;
  pages?: number;
  records?: Array<PostVo>;
  searchCount?: boolean;
  size?: number;
  total?: number;
};

export type Page_userVo_ = {
  countId?: string;
  current?: number;
  maxLimit?: number;
  optimizeCountSql?: boolean;
  orders?: Array<OrderItem>;
  pages?: number;
  records?: Array<UserVo>;
  searchCount?: boolean;
  size?: number;
  total?: number;
};

export type Page_user_ = {
  countId?: string;
  current?: number;
  maxLimit?: number;
  optimizeCountSql?: boolean;
  orders?: Array<OrderItem>;
  pages?: number;
  records?: Array<User>;
  searchCount?: boolean;
  size?: number;
  total?: number;
};

export type PostAddRequest = {
  content?: string;
  tags?: Array<string>;
  title?: string;
};

export type PostEditRequest = {
  content?: string;
  id?: number;
  tags?: Array<string>;
  title?: string;
};

export type PostFavourAddRequest = {
  postId?: number;
};

export type PostFavourQueryRequest = {
  current?: number;
  pageSize?: number;
  postQueryRequest?: PostQueryRequest;
  sortField?: string;
  sortOrder?: string;
  userId?: number;
};

export type PostQueryRequest = {
  content?: string;
  current?: number;
  favourUserId?: number;
  id?: number;
  notId?: number;
  orTags?: Array<string>;
  pageSize?: number;
  searchText?: string;
  sortField?: string;
  sortOrder?: string;
  tags?: Array<string>;
  title?: string;
  userId?: number;
};

export type PostThumbAddRequest = {
  postId?: number;
};

export type PostUpdateRequest = {
  content?: string;
  id?: number;
  tags?: Array<string>;
  title?: string;
};

export type PostVo = {
  content?: string;
  createTime?: string;
  favourNum?: number;
  hasFavour?: boolean;
  hasThumb?: boolean;
  id?: number;
  tagList?: Array<string>;
  thumbNum?: number;
  title?: string;
  updateTime?: string;
  user?: UserVo;
  userId?: number;
};

export type User = {
  createTime?: string;
  id?: number;
  isDelete?: number;
  mpOpenId?: string;
  unionId?: string;
  updateTime?: string;
  userAccount?: string;
  userAvatar?: string;
  userName?: string;
  userPassword?: string;
  userProfile?: string;
  userRole?: string;
};

export type UserAddRequest = {
  userAccount?: string;
  userAvatar?: string;
  userName?: string;
  userRole?: string;
};

export type UserLoginRequest = {
  userAccount?: string;
  userPassword?: string;
};

export type UserQueryRequest = {
  current?: number;
  id?: number;
  mpOpenId?: string;
  pageSize?: number;
  sortField?: string;
  sortOrder?: string;
  unionId?: string;
  userName?: string;
  userProfile?: string;
  userRole?: string;
};

export type UserRegisterRequest = {
  checkPassword?: string;
  userAccount?: string;
  userPassword?: string;
};

export type UserUpdateMyRequest = {
  userAvatar?: string;
  userName?: string;
  userProfile?: string;
};

export type UserUpdateRequest = {
  id?: number;
  userAvatar?: string;
  userName?: string;
  userProfile?: string;
  userRole?: string;
};

export type UserVo = {
  createTime?: string;
  id?: number;
  userAvatar?: string;
  userName?: string;
  userProfile?: string;
  userRole?: string;
};

export type CheckUsingGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * echostr
     */
    echostr?: string;
    /**
     * nonce
     */
    nonce?: string;
    /**
     * signature
     */
    signature?: string;
    /**
     * timestamp
     */
    timestamp?: string;
  };
  url: "/api/";
};

export type CheckUsingGetErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type CheckUsingGetResponses = {
  /**
   * OK
   */
  200: string;
};

export type CheckUsingGetResponse =
  CheckUsingGetResponses[keyof CheckUsingGetResponses];

export type ReceiveMessageUsingPostData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/";
};

export type ReceiveMessageUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type ReceiveMessageUsingPostResponses = {
  /**
   * OK
   */
  200: unknown;
  /**
   * Created
   */
  201: unknown;
};

export type UploadFileUsingPostData = {
  body?: {
    file?: Blob | File;
  };
  path?: never;
  query?: {
    biz?: string;
  };
  url: "/api/file/upload";
};

export type UploadFileUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type UploadFileUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_string_;
  /**
   * Created
   */
  201: unknown;
};

export type UploadFileUsingPostResponse =
  UploadFileUsingPostResponses[keyof UploadFileUsingPostResponses];

export type AddPostUsingPostData = {
  /**
   * postAddRequest
   */
  body: PostAddRequest;
  path?: never;
  query?: never;
  url: "/api/post/add";
};

export type AddPostUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type AddPostUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_long_;
  /**
   * Created
   */
  201: unknown;
};

export type AddPostUsingPostResponse =
  AddPostUsingPostResponses[keyof AddPostUsingPostResponses];

export type DeletePostUsingPostData = {
  /**
   * deleteRequest
   */
  body: DeleteRequest;
  path?: never;
  query?: never;
  url: "/api/post/delete";
};

export type DeletePostUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type DeletePostUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_boolean_;
  /**
   * Created
   */
  201: unknown;
};

export type DeletePostUsingPostResponse =
  DeletePostUsingPostResponses[keyof DeletePostUsingPostResponses];

export type EditPostUsingPostData = {
  /**
   * postEditRequest
   */
  body: PostEditRequest;
  path?: never;
  query?: never;
  url: "/api/post/edit";
};

export type EditPostUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type EditPostUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_boolean_;
  /**
   * Created
   */
  201: unknown;
};

export type EditPostUsingPostResponse =
  EditPostUsingPostResponses[keyof EditPostUsingPostResponses];

export type GetPostVoByIdUsingGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * id
     */
    id?: number;
  };
  url: "/api/post/get/vo";
};

export type GetPostVoByIdUsingGetErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type GetPostVoByIdUsingGetResponses = {
  /**
   * OK
   */
  200: BaseResponse_PostVo_;
};

export type GetPostVoByIdUsingGetResponse =
  GetPostVoByIdUsingGetResponses[keyof GetPostVoByIdUsingGetResponses];

export type ListPostVoByPageUsingPostData = {
  /**
   * postQueryRequest
   */
  body: PostQueryRequest;
  path?: never;
  query?: never;
  url: "/api/post/list/page/vo";
};

export type ListPostVoByPageUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type ListPostVoByPageUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_Page_PostVo__;
  /**
   * Created
   */
  201: unknown;
};

export type ListPostVoByPageUsingPostResponse =
  ListPostVoByPageUsingPostResponses[keyof ListPostVoByPageUsingPostResponses];

export type ListMyPostVoByPageUsingPostData = {
  /**
   * postQueryRequest
   */
  body: PostQueryRequest;
  path?: never;
  query?: never;
  url: "/api/post/my/list/page/vo";
};

export type ListMyPostVoByPageUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type ListMyPostVoByPageUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_Page_PostVo__;
  /**
   * Created
   */
  201: unknown;
};

export type ListMyPostVoByPageUsingPostResponse =
  ListMyPostVoByPageUsingPostResponses[keyof ListMyPostVoByPageUsingPostResponses];

export type SearchPostVoByPageUsingPostData = {
  /**
   * postQueryRequest
   */
  body: PostQueryRequest;
  path?: never;
  query?: never;
  url: "/api/post/search/page/vo";
};

export type SearchPostVoByPageUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type SearchPostVoByPageUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_Page_PostVo__;
  /**
   * Created
   */
  201: unknown;
};

export type SearchPostVoByPageUsingPostResponse =
  SearchPostVoByPageUsingPostResponses[keyof SearchPostVoByPageUsingPostResponses];

export type UpdatePostUsingPostData = {
  /**
   * postUpdateRequest
   */
  body: PostUpdateRequest;
  path?: never;
  query?: never;
  url: "/api/post/update";
};

export type UpdatePostUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type UpdatePostUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_boolean_;
  /**
   * Created
   */
  201: unknown;
};

export type UpdatePostUsingPostResponse =
  UpdatePostUsingPostResponses[keyof UpdatePostUsingPostResponses];

export type DoPostFavourUsingPostData = {
  /**
   * postFavourAddRequest
   */
  body: PostFavourAddRequest;
  path?: never;
  query?: never;
  url: "/api/post_favour/";
};

export type DoPostFavourUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type DoPostFavourUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_int_;
  /**
   * Created
   */
  201: unknown;
};

export type DoPostFavourUsingPostResponse =
  DoPostFavourUsingPostResponses[keyof DoPostFavourUsingPostResponses];

export type ListFavourPostByPageUsingPostData = {
  /**
   * postFavourQueryRequest
   */
  body: PostFavourQueryRequest;
  path?: never;
  query?: never;
  url: "/api/post_favour/list/page";
};

export type ListFavourPostByPageUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type ListFavourPostByPageUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_Page_PostVo__;
  /**
   * Created
   */
  201: unknown;
};

export type ListFavourPostByPageUsingPostResponse =
  ListFavourPostByPageUsingPostResponses[keyof ListFavourPostByPageUsingPostResponses];

export type ListMyFavourPostByPageUsingPostData = {
  /**
   * postQueryRequest
   */
  body: PostQueryRequest;
  path?: never;
  query?: never;
  url: "/api/post_favour/my/list/page";
};

export type ListMyFavourPostByPageUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type ListMyFavourPostByPageUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_Page_PostVo__;
  /**
   * Created
   */
  201: unknown;
};

export type ListMyFavourPostByPageUsingPostResponse =
  ListMyFavourPostByPageUsingPostResponses[keyof ListMyFavourPostByPageUsingPostResponses];

export type DoThumbUsingPostData = {
  /**
   * postThumbAddRequest
   */
  body: PostThumbAddRequest;
  path?: never;
  query?: never;
  url: "/api/post_thumb/";
};

export type DoThumbUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type DoThumbUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_int_;
  /**
   * Created
   */
  201: unknown;
};

export type DoThumbUsingPostResponse =
  DoThumbUsingPostResponses[keyof DoThumbUsingPostResponses];

export type SetMenuUsingGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/setMenu";
};

export type SetMenuUsingGetErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type SetMenuUsingGetResponses = {
  /**
   * OK
   */
  200: string;
};

export type SetMenuUsingGetResponse =
  SetMenuUsingGetResponses[keyof SetMenuUsingGetResponses];

export type AddUserUsingPostData = {
  /**
   * userAddRequest
   */
  body: UserAddRequest;
  path?: never;
  query?: never;
  url: "/api/user/add";
};

export type AddUserUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type AddUserUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_long_;
  /**
   * Created
   */
  201: unknown;
};

export type AddUserUsingPostResponse =
  AddUserUsingPostResponses[keyof AddUserUsingPostResponses];

export type DeleteUserUsingPostData = {
  /**
   * deleteRequest
   */
  body: DeleteRequest;
  path?: never;
  query?: never;
  url: "/api/user/delete";
};

export type DeleteUserUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type DeleteUserUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_boolean_;
  /**
   * Created
   */
  201: unknown;
};

export type DeleteUserUsingPostResponse =
  DeleteUserUsingPostResponses[keyof DeleteUserUsingPostResponses];

export type GetUserByIdUsingGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * id
     */
    id?: number;
  };
  url: "/api/user/get";
};

export type GetUserByIdUsingGetErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type GetUserByIdUsingGetResponses = {
  /**
   * OK
   */
  200: BaseResponse_user_;
};

export type GetUserByIdUsingGetResponse =
  GetUserByIdUsingGetResponses[keyof GetUserByIdUsingGetResponses];

export type GetLoginUserUsingGetData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/user/get/login";
};

export type GetLoginUserUsingGetErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type GetLoginUserUsingGetResponses = {
  /**
   * OK
   */
  200: BaseResponse_LoginUserVo_;
};

export type GetLoginUserUsingGetResponse =
  GetLoginUserUsingGetResponses[keyof GetLoginUserUsingGetResponses];

export type GetUserVoByIdUsingGetData = {
  body?: never;
  path?: never;
  query?: {
    /**
     * id
     */
    id?: number;
  };
  url: "/api/user/get/vo";
};

export type GetUserVoByIdUsingGetErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type GetUserVoByIdUsingGetResponses = {
  /**
   * OK
   */
  200: BaseResponse_userVo_;
};

export type GetUserVoByIdUsingGetResponse =
  GetUserVoByIdUsingGetResponses[keyof GetUserVoByIdUsingGetResponses];

export type ListUserByPageUsingPostData = {
  /**
   * userQueryRequest
   */
  body: UserQueryRequest;
  path?: never;
  query?: never;
  url: "/api/user/list/page";
};

export type ListUserByPageUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type ListUserByPageUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_Page_user__;
  /**
   * Created
   */
  201: unknown;
};

export type ListUserByPageUsingPostResponse =
  ListUserByPageUsingPostResponses[keyof ListUserByPageUsingPostResponses];

export type ListUserVoByPageUsingPostData = {
  /**
   * userQueryRequest
   */
  body: UserQueryRequest;
  path?: never;
  query?: never;
  url: "/api/user/list/page/vo";
};

export type ListUserVoByPageUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type ListUserVoByPageUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_Page_userVo__;
  /**
   * Created
   */
  201: unknown;
};

export type ListUserVoByPageUsingPostResponse =
  ListUserVoByPageUsingPostResponses[keyof ListUserVoByPageUsingPostResponses];

export type UserLoginUsingPostData = {
  /**
   * userLoginRequest
   */
  body: UserLoginRequest;
  path?: never;
  query?: never;
  url: "/api/user/login";
};

export type UserLoginUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type UserLoginUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_LoginUserVo_;
  /**
   * Created
   */
  201: unknown;
};

export type UserLoginUsingPostResponse =
  UserLoginUsingPostResponses[keyof UserLoginUsingPostResponses];

export type UserLoginByWxOpenUsingGetData = {
  body?: never;
  path?: never;
  query: {
    /**
     * code
     */
    code: string;
  };
  url: "/api/user/login/wx_open";
};

export type UserLoginByWxOpenUsingGetErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type UserLoginByWxOpenUsingGetResponses = {
  /**
   * OK
   */
  200: BaseResponse_LoginUserVo_;
};

export type UserLoginByWxOpenUsingGetResponse =
  UserLoginByWxOpenUsingGetResponses[keyof UserLoginByWxOpenUsingGetResponses];

export type UserLogoutUsingPostData = {
  body?: never;
  path?: never;
  query?: never;
  url: "/api/user/logout";
};

export type UserLogoutUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type UserLogoutUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_boolean_;
  /**
   * Created
   */
  201: unknown;
};

export type UserLogoutUsingPostResponse =
  UserLogoutUsingPostResponses[keyof UserLogoutUsingPostResponses];

export type UserRegisterUsingPostData = {
  /**
   * userRegisterRequest
   */
  body: UserRegisterRequest;
  path?: never;
  query?: never;
  url: "/api/user/register";
};

export type UserRegisterUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type UserRegisterUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_long_;
  /**
   * Created
   */
  201: unknown;
};

export type UserRegisterUsingPostResponse =
  UserRegisterUsingPostResponses[keyof UserRegisterUsingPostResponses];

export type UpdateUserUsingPostData = {
  /**
   * userUpdateRequest
   */
  body: UserUpdateRequest;
  path?: never;
  query?: never;
  url: "/api/user/update";
};

export type UpdateUserUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type UpdateUserUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_boolean_;
  /**
   * Created
   */
  201: unknown;
};

export type UpdateUserUsingPostResponse =
  UpdateUserUsingPostResponses[keyof UpdateUserUsingPostResponses];

export type UpdateMyUserUsingPostData = {
  /**
   * userUpdateMyRequest
   */
  body: UserUpdateMyRequest;
  path?: never;
  query?: never;
  url: "/api/user/update/my";
};

export type UpdateMyUserUsingPostErrors = {
  /**
   * Unauthorized
   */
  401: unknown;
  /**
   * Forbidden
   */
  403: unknown;
  /**
   * Not Found
   */
  404: unknown;
};

export type UpdateMyUserUsingPostResponses = {
  /**
   * OK
   */
  200: BaseResponse_boolean_;
  /**
   * Created
   */
  201: unknown;
};

export type UpdateMyUserUsingPostResponse =
  UpdateMyUserUsingPostResponses[keyof UpdateMyUserUsingPostResponses];
