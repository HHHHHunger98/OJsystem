// This file is auto-generated by @hey-api/openapi-ts

import {
  type Options as ClientOptions,
  type TDataShape,
  type Client,
  formDataBodySerializer,
} from "@hey-api/client-axios";
import type {
  CheckUsingGetData,
  CheckUsingGetResponse,
  ReceiveMessageUsingPostData,
  UploadFileUsingPostData,
  UploadFileUsingPostResponse,
  AddPostUsingPostData,
  AddPostUsingPostResponse,
  DeletePostUsingPostData,
  DeletePostUsingPostResponse,
  EditPostUsingPostData,
  EditPostUsingPostResponse,
  GetPostVoByIdUsingGetData,
  GetPostVoByIdUsingGetResponse,
  ListPostVoByPageUsingPostData,
  ListPostVoByPageUsingPostResponse,
  ListMyPostVoByPageUsingPostData,
  ListMyPostVoByPageUsingPostResponse,
  SearchPostVoByPageUsingPostData,
  SearchPostVoByPageUsingPostResponse,
  UpdatePostUsingPostData,
  UpdatePostUsingPostResponse,
  DoPostFavourUsingPostData,
  DoPostFavourUsingPostResponse,
  ListFavourPostByPageUsingPostData,
  ListFavourPostByPageUsingPostResponse,
  ListMyFavourPostByPageUsingPostData,
  ListMyFavourPostByPageUsingPostResponse,
  DoThumbUsingPostData,
  DoThumbUsingPostResponse,
  AddProblemUsingPostData,
  AddProblemUsingPostResponse,
  DeleteProblemUsingPostData,
  DeleteProblemUsingPostResponse,
  EditProblemUsingPostData,
  EditProblemUsingPostResponse,
  GetProblemByIdUsingGetData,
  GetProblemByIdUsingGetResponse,
  GetProblemVoByIdUsingGetData,
  GetProblemVoByIdUsingGetResponse,
  ListProblemByPageUsingPostData,
  ListProblemByPageUsingPostResponse,
  ListProblemVoByPageUsingPostData,
  ListProblemVoByPageUsingPostResponse,
  ListMyProblemVoByPageUsingPostData,
  ListMyProblemVoByPageUsingPostResponse,
  UpdateProblemUsingPostData,
  UpdateProblemUsingPostResponse,
  DoProblemSubmitUsingPostData,
  DoProblemSubmitUsingPostResponse,
  ListProblemSubmitByPageUsingPostData,
  ListProblemSubmitByPageUsingPostResponse,
  SetMenuUsingGetData,
  SetMenuUsingGetResponse,
  AddUserUsingPostData,
  AddUserUsingPostResponse,
  DeleteUserUsingPostData,
  DeleteUserUsingPostResponse,
  GetUserByIdUsingGetData,
  GetUserByIdUsingGetResponse,
  GetLoginUserUsingGetData,
  GetLoginUserUsingGetResponse,
  GetUserVoByIdUsingGetData,
  GetUserVoByIdUsingGetResponse,
  ListUserByPageUsingPostData,
  ListUserByPageUsingPostResponse,
  ListUserVoByPageUsingPostData,
  ListUserVoByPageUsingPostResponse,
  UserLoginUsingPostData,
  UserLoginUsingPostResponse,
  UserLoginByWxOpenUsingGetData,
  UserLoginByWxOpenUsingGetResponse,
  UserLogoutUsingPostData,
  UserLogoutUsingPostResponse,
  UserRegisterUsingPostData,
  UserRegisterUsingPostResponse,
  UpdateUserUsingPostData,
  UpdateUserUsingPostResponse,
  UpdateMyUserUsingPostData,
  UpdateMyUserUsingPostResponse,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client;
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>;
};

/**
 * check
 */
export const checkUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<CheckUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    CheckUsingGetResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/",
    ...options,
  });
};

/**
 * receiveMessage
 */
export const receiveMessageUsingPost = <ThrowOnError extends boolean = false>(
  options?: Options<ReceiveMessageUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    unknown,
    unknown,
    ThrowOnError
  >({
    url: "/api/",
    ...options,
  });
};

/**
 * uploadFile
 */
export const uploadFileUsingPost = <ThrowOnError extends boolean = false>(
  options?: Options<UploadFileUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    UploadFileUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    ...formDataBodySerializer,
    url: "/api/file/upload",
    ...options,
    headers: {
      "Content-Type": null,
      ...options?.headers,
    },
  });
};

/**
 * addPost
 */
export const addPostUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<AddPostUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    AddPostUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post/add",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * deletePost
 */
export const deletePostUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<DeletePostUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    DeletePostUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post/delete",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * editPost
 */
export const editPostUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<EditPostUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    EditPostUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post/edit",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * getPostVOById
 */
export const getPostVoByIdUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetPostVoByIdUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetPostVoByIdUsingGetResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post/get/vo",
    ...options,
  });
};

/**
 * listPostVOByPage
 */
export const listPostVoByPageUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<ListPostVoByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ListPostVoByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post/list/page/vo",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * listMyPostVOByPage
 */
export const listMyPostVoByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<ListMyPostVoByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ListMyPostVoByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post/my/list/page/vo",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * searchPostVOByPage
 */
export const searchPostVoByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<SearchPostVoByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    SearchPostVoByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post/search/page/vo",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * updatePost
 */
export const updatePostUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UpdatePostUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    UpdatePostUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post/update",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * doPostFavour
 */
export const doPostFavourUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<DoPostFavourUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    DoPostFavourUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post_favour/",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * listFavourPostByPage
 */
export const listFavourPostByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<ListFavourPostByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ListFavourPostByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post_favour/list/page",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * listMyFavourPostByPage
 */
export const listMyFavourPostByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<ListMyFavourPostByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ListMyFavourPostByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post_favour/my/list/page",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * doThumb
 */
export const doThumbUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<DoThumbUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    DoThumbUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/post_thumb/",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * addProblem
 */
export const addProblemUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<AddProblemUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    AddProblemUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem/add",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * deleteProblem
 */
export const deleteProblemUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<DeleteProblemUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    DeleteProblemUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem/delete",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * editProblem
 */
export const editProblemUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<EditProblemUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    EditProblemUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem/edit",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * getProblemById
 */
export const getProblemByIdUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetProblemByIdUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetProblemByIdUsingGetResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem/get",
    ...options,
  });
};

/**
 * getProblemVOById
 */
export const getProblemVoByIdUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetProblemVoByIdUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetProblemVoByIdUsingGetResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem/get/vo",
    ...options,
  });
};

/**
 * listProblemByPage
 */
export const listProblemByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<ListProblemByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ListProblemByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem/list/page",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * listProblemVOByPage
 */
export const listProblemVoByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<ListProblemVoByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ListProblemVoByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem/list/page/vo",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * listMyProblemVOByPage
 */
export const listMyProblemVoByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<ListMyProblemVoByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ListMyProblemVoByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem/my/list/page/vo",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * updateProblem
 */
export const updateProblemUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UpdateProblemUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    UpdateProblemUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem/update",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * doProblemSubmit
 */
export const doProblemSubmitUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<DoProblemSubmitUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    DoProblemSubmitUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem_submit/",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * listProblemSubmitByPage
 */
export const listProblemSubmitByPageUsingPost = <
  ThrowOnError extends boolean = false
>(
  options: Options<ListProblemSubmitByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ListProblemSubmitByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/problem_submit/list/page",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * setMenu
 */
export const setMenuUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<SetMenuUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    SetMenuUsingGetResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/setMenu",
    ...options,
  });
};

/**
 * addUser
 */
export const addUserUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<AddUserUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    AddUserUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/add",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * deleteUser
 */
export const deleteUserUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<DeleteUserUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    DeleteUserUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/delete",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * getUserById
 */
export const getUserByIdUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetUserByIdUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUserByIdUsingGetResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/get",
    ...options,
  });
};

/**
 * getLoginUser
 */
export const getLoginUserUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetLoginUserUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetLoginUserUsingGetResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/get/login",
    ...options,
  });
};

/**
 * getUserVOById
 */
export const getUserVoByIdUsingGet = <ThrowOnError extends boolean = false>(
  options?: Options<GetUserVoByIdUsingGetData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).get<
    GetUserVoByIdUsingGetResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/get/vo",
    ...options,
  });
};

/**
 * listUserByPage
 */
export const listUserByPageUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<ListUserByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ListUserByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/list/page",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * listUserVOByPage
 */
export const listUserVoByPageUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<ListUserVoByPageUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    ListUserVoByPageUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/list/page/vo",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * userLogin
 */
export const userLoginUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UserLoginUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    UserLoginUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/login",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * userLoginByWxOpen
 */
export const userLoginByWxOpenUsingGet = <ThrowOnError extends boolean = false>(
  options: Options<UserLoginByWxOpenUsingGetData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).get<
    UserLoginByWxOpenUsingGetResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/login/wx_open",
    ...options,
  });
};

/**
 * userLogout
 */
export const userLogoutUsingPost = <ThrowOnError extends boolean = false>(
  options?: Options<UserLogoutUsingPostData, ThrowOnError>
) => {
  return (options?.client ?? _heyApiClient).post<
    UserLogoutUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/logout",
    ...options,
  });
};

/**
 * userRegister
 */
export const userRegisterUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UserRegisterUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    UserRegisterUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/register",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * updateUser
 */
export const updateUserUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UpdateUserUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    UpdateUserUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/update",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};

/**
 * updateMyUser
 */
export const updateMyUserUsingPost = <ThrowOnError extends boolean = false>(
  options: Options<UpdateMyUserUsingPostData, ThrowOnError>
) => {
  return (options.client ?? _heyApiClient).post<
    UpdateMyUserUsingPostResponse,
    unknown,
    ThrowOnError
  >({
    url: "/api/user/update/my",
    ...options,
    headers: {
      "Content-Type": "application/json",
      ...options?.headers,
    },
  });
};
